package view 

import (
    "fmt"    
    model "github.com/keiko30/chatbot/model"
)

templ Message(chat model.Chat){
    <div class="mb-2 text-right">
        <p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">{ chat.Question}</p>
    </div>
    <div class="mb-2">
        <p class="bg-gray-200 text-gray-700 rounded-lg py-2 px-4 inline-block">{ chat.Answer }</p>
    </div>
}

templ Chat(){
        <div class="fixed bottom-0 right-10 mb-4 mr-4">
            <button id="open-chat" title="Contact Sale"
            class="fixed z-90 bottom-10 right-8 bg-blue-600 w-20 h-20 rounded-full drop-shadow-lg
            flex justify-center items-center text-white text-4xl hover:bg-blue-700 hover:drop-shadow-2xl
            hover:animate-bounce duration-300">
            <svg class="w-10 h-10 lg:w-12 lg:h-12 xl:w-16 xl:h-16" fill="currentColor"
            viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z"
                clip-rule="evenodd"></path>
            </svg>
            </button>
        </div>
        <div id="chat-container" class="hidden fixed bottom-16 right-4 w-96">
            <div class="bg-white shadow-md rounded-lg max-w-lg w-full">
                <div class="p-4 border-b bg-blue-500 text-white rounded-t-lg flex justify-between items-center">
                    <p class="text-lg font-semibold">Gazu Bot</p>
                    <button id="close-chat" class="text-gray-300 hover:text-gray-400 focus:outline-none focus:text-gray-400">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                <div id="chatbox" class="p-4 h-80 overflow-y-auto">
                  <!-- Chat messages-->
                  <div class="mb-2">
                    <p class="bg-gray-200 text-gray-700 rounded-lg py-2 px-4 inline-block">
                        Hello, my name is Gazu. I am fun ChatBot!<br/>
                        Please ask any question and I would do my best to make you laught!
                    </p>
                  </div>
                </div>
                <form hx-post="/sendChatMessage/" hx-target="#chatbox" hx-swap="beforeend"
                    class="p-4 border-t flex" id="example-form">
                    <label for="underline_select" class="sr-only">Underline select</label>
                    <select name="message" id="underline_select" class="block py-2.5 px-0 w-full text-sm text-gray-500 bg-transparent border-0 border-b-2 border-gray-200 appearance-none dark:text-gray-400 dark:border-gray-700 focus:outline-none focus:ring-0 focus:border-gray-200 peer"
                    hx-get="/getQuestions/" hx-target="this" hx-swap="beforeend" hx-trigger="load"
                    hx-on:htmx:validation:validate="
                        if(this.value == 'Invalid') {
                        this.setCustomValidity('Please enter a valid value') // set the validation error
                        htmx.find('#example-form').reportValidity()          // report the issue
                    }">
                        <option value="Invalid" selected>Select a question!</option>
                   </select>
                    <button id="send-button" class="bg-blue-500 text-white px-4 py-2 rounded-r-md hover:bg-blue-600 transition duration-300">Send</button>
                </form>
            </div>
        </div>

    <script>
    const chatContainer = document.getElementById("chat-container");
    const openChatButton = document.getElementById("open-chat");
    const closeChatButton = document.getElementById("close-chat");
    
    // Function to toggle the chatbox visibility
    function toggleChatbox() {
        chatContainer.classList.toggle("hidden");
    }
    
    // Add an event listener to the open chat button
    openChatButton.addEventListener("click", toggleChatbox);
    
    // Add an event listener to the close chat button
    closeChatButton.addEventListener("click", toggleChatbox);
    
    </script>
}

templ Questions(chats []model.Chat){
    for _, value := range(chats){
        <option value={ fmt.Sprintf("%d", value.ID) }>{ value.Question }</option>
    }
}